{
    "name": "MtLinePlotterIndicator",
    "module": "backtrader.indicator",
    "doc": "Dirty job manager for a LineSeries\n\n  - During __new__ (class creation), it reads \"lines\", \"plotinfo\",\n    \"plotlines\" class variable definitions and turns them into\n    Classes of type Lines or AutoClassInfo (plotinfo/plotlines)\n\n  - During \"new\" (instance creation) the lines/plotinfo/plotlines\n    classes are substituted in the instance with instances of the\n    aforementioned classes and aliases are added for the \"lines\" held\n    in the \"lines\" instance\n\n    Additionally and for remaining kwargs, these are matched against\n    args in plotinfo and if existent are set there and removed from kwargs\n\n    Remember that this Metaclass has a MetaParams (from metabase)\n    as root class and therefore \"params\" defined for the class have been\n    removed from kwargs at an earlier state",
    "constructor_signature": "(cls, name, bases, dct)",
    "methods": [
        {
            "name": "doinit",
            "signature": "(cls, _obj, *args, **kwargs)",
            "doc": ""
        },
        {
            "name": "donew",
            "signature": "(cls, *args, **kwargs)",
            "doc": "Intercept instance creation, take over lines/plotinfo/plotlines\nclass attributes by creating corresponding instance variables and add\naliases for \"lines\" and the \"lines\" held within it"
        },
        {
            "name": "dopostinit",
            "signature": "(cls, _obj, *args, **kwargs)",
            "doc": ""
        },
        {
            "name": "dopreinit",
            "signature": "(cls, _obj, *args, **kwargs)",
            "doc": ""
        },
        {
            "name": "doprenew",
            "signature": "(cls, *args, **kwargs)",
            "doc": ""
        }
    ],
    "attributes": {},
    "input_schema": {
        "cls": {
            "default": null,
            "annotation": "Any"
        },
        "name": {
            "default": null,
            "annotation": "Any"
        },
        "bases": {
            "default": null,
            "annotation": "Any"
        },
        "dct": {
            "default": null,
            "annotation": "Any"
        }
    },
    "params_schema": {},
    "output_schema": {}
}