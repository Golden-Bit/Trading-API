{
    "name": "Lines",
    "module": "backtrader.lineseries",
    "doc": "Defines an \"array\" of lines which also has most of the interface of\na LineBuffer class (forward, rewind, advance...).\n\nThis interface operations are passed to the lines held by self\n\nThe class can autosubclass itself (_derive) to hold new lines keeping them\nin the defined order.",
    "constructor_signature": "(self, initlines=None)",
    "methods": [
        {
            "name": "advance",
            "signature": "(self, size=1)",
            "doc": "Proxy line operation"
        },
        {
            "name": "backwards",
            "signature": "(self, size=1, force=False)",
            "doc": "Proxy line operation"
        },
        {
            "name": "buflen",
            "signature": "(self, line=0)",
            "doc": "Proxy line operation"
        },
        {
            "name": "extend",
            "signature": "(self, value=nan, size=0)",
            "doc": "Proxy line operation"
        },
        {
            "name": "extrasize",
            "signature": "(self)",
            "doc": ""
        },
        {
            "name": "forward",
            "signature": "(self, value=nan, size=1)",
            "doc": "Proxy line operation"
        },
        {
            "name": "fullsize",
            "signature": "(self)",
            "doc": ""
        },
        {
            "name": "get",
            "signature": "(self, ago=0, size=1, line=0)",
            "doc": "Proxy line operation"
        },
        {
            "name": "home",
            "signature": "(self)",
            "doc": "Proxy line operation"
        },
        {
            "name": "itersize",
            "signature": "(self)",
            "doc": ""
        },
        {
            "name": "reset",
            "signature": "(self)",
            "doc": "Proxy line operation"
        },
        {
            "name": "rewind",
            "signature": "(self, size=1)",
            "doc": "Proxy line operation"
        },
        {
            "name": "size",
            "signature": "(self)",
            "doc": ""
        }
    ],
    "attributes": {
        "_getlinesbase": {
            "value": "<classmethod(<function Lines.<lambda> at 0x000002561753E830>)>",
            "doc": ""
        },
        "_getlines": {
            "value": "<classmethod(<function Lines.<lambda> at 0x000002561753E8C0>)>",
            "doc": ""
        },
        "_getlinesextra": {
            "value": "<classmethod(<function Lines.<lambda> at 0x000002561753E950>)>",
            "doc": ""
        },
        "_getlinesextrabase": {
            "value": "<classmethod(<function Lines.<lambda> at 0x000002561753E9E0>)>",
            "doc": ""
        },
        "_derive": {
            "value": "<classmethod(<function Lines._derive at 0x000002561753EA70>)>",
            "doc": "Creates a subclass of this class with the lines of this class as\ninitial input for the subclass. It will include num \"extralines\" and\nlines present in \"otherbases\"\n\n\"name\" will be used as the suffix of the final class name\n\n\"linesoverride\": if True the lines of all bases will be discarded and\nthe baseclass will be the topmost class \"Lines\". This is intended to\ncreate a new hierarchy"
        },
        "_getlinealias": {
            "value": "<classmethod(<function Lines._getlinealias at 0x000002561753EB00>)>",
            "doc": "Return the alias for a line given the index"
        },
        "getlinealiases": {
            "value": "<classmethod(<function Lines.getlinealiases at 0x000002561753EB90>)>",
            "doc": ""
        }
    },
    "input_schema": {
        "initlines": {
            "default": null,
            "annotation": "Any"
        }
    },
    "params_schema": {},
    "output_schema": {}
}